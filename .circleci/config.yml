version: 2.1
orbs:
  hmpps: ministryofjustice/hmpps@dev:alpha

parameters:
  releases-slack-channel:
    type: string
    default: the_elephants_devs
  java-version:
    type: string
    default: "21.0"
  localstack-version:
    type: string
    default: "3.0.2"
  postgres-version:
    type: string
    default: "16.3"

jobs:
  validate:
    executor:
      name: hmpps/java
      tag: << pipeline.parameters.java-version >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew detekt check
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
  integration-test:
    executor:
      name: hmpps/java_localstack_postgres_with_db_name
      jdk_tag: << pipeline.parameters.java-version >>
      localstack_tag: << pipeline.parameters.localstack-version >>
      postgres_tag: << pipeline.parameters.postgres-version >>
      postgres_db: afer-test-db
      postgres_username: afer
      postgres_password: dummy
      postgres_port: "5433"
    steps:
      - run:
          command: |
            while true; do
              sleep 5
              ps auxwwf
              echo "======"
            done
          background: true
      - checkout
      - hmpps/wait_till_ready_postgres:
          port: 5433
      - hmpps/wait_till_ready
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew integrationTest
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - hmpps/database_schema_report:
          jdk_tag: << pipeline.parameters.java-version >>
          localstack_tag: << pipeline.parameters.localstack-version >>
          postgres_tag: << pipeline.parameters.postgres-version >>
          database_name: afer-test-db
          user: afer
          password: dummy
          port: "5433"
          initialise_database: "./gradlew initialiseDatabase"
      - validate:
          filters:
            tags:
              ignore: /.*/
      - integration-test:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_multiplatform_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - integration-test
            - build_docker
            - helm_lint
          helm_timeout: 5m
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          jira_update: true
          jira_env_type: staging
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context:
            - hmpps-common-vars
            - hmpps-assess-for-early-release-api-preprod
          requires:
            - request-preprod-approval
          helm_timeout: 5m
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          jira_update: true
          jira_env_type: production
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-assess-for-early-release-api-prod
          requires:
            - request-prod-approval
          helm_timeout: 5m
