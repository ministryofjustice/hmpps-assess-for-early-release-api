<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ConstructorParameterNaming:PrisonOffenderEventListener.kt$HMPPSEventType$val Type: String</ID>
    <ID>ConstructorParameterNaming:PrisonOffenderEventListener.kt$HMPPSEventType$val Value: String</ID>
    <ID>ConstructorParameterNaming:PrisonOffenderEventListener.kt$HMPPSMessage$val Message: String</ID>
    <ID>ConstructorParameterNaming:PrisonOffenderEventListener.kt$HMPPSMessage$val MessageAttributes: HMPPSMessageAttributes</ID>
    <ID>LongParameterList:AddressService.kt$AddressService$( private val addressRepository: AddressRepository, private val assessmentService: AssessmentService, private val casCheckRequestRepository: CasCheckRequestRepository, private val curfewAddressCheckRequestRepository: CurfewAddressCheckRequestRepository, private val offenderRepository: OffenderRepository, private val osPlacesApiClient: OsPlacesApiClient, private val standardAddressCheckRequestRepository: StandardAddressCheckRequestRepository, private val residentRepository: ResidentRepository, )</ID>
    <ID>LongParameterList:CasCheckRequest.kt$CasCheckRequest$( id: Long = -1, caAdditionalInfo: String? = null, ppAdditionalInfo: String? = null, dateRequested: LocalDateTime = LocalDateTime.now(), preferencePriority: AddressPreferencePriority, status: AddressCheckRequestStatus = AddressCheckRequestStatus.IN_PROGRESS, assessment: Assessment, @ManyToOne @JoinColumn(name = "allocated_address_id", referencedColumnName = "id") val allocatedAddress: Address? = null, )</ID>
    <ID>LongParameterList:CurfewAddressCheckRequest.kt$CurfewAddressCheckRequest$( @Id @GeneratedValue(strategy = GenerationType.IDENTITY) @NotNull val id: Long = -1, val caAdditionalInfo: String? = null, val ppAdditionalInfo: String? = null, @NotNull val dateRequested: LocalDateTime = LocalDateTime.now(), @NotNull @Enumerated(EnumType.STRING) val preferencePriority: AddressPreferencePriority, @NotNull @Enumerated(EnumType.STRING) val status: AddressCheckRequestStatus, @ManyToOne @JoinColumn(name = "assessment_id", referencedColumnName = "id", nullable = false) val assessment: Assessment, @NotNull val createdTimestamp: LocalDateTime = LocalDateTime.now(), @NotNull val lastUpdatedTimestamp: LocalDateTime = LocalDateTime.now(), )</ID>
    <ID>LongParameterList:StandardAddressCheckRequest.kt$StandardAddressCheckRequest$( id: Long = -1, caAdditionalInfo: String? = null, ppAdditionalInfo: String? = null, dateRequested: LocalDateTime = LocalDateTime.now(), preferencePriority: AddressPreferencePriority, status: AddressCheckRequestStatus = AddressCheckRequestStatus.IN_PROGRESS, assessment: Assessment, @ManyToOne @JoinColumn(name = "address_id", referencedColumnName = "id") val address: Address, @OneToMany(mappedBy = "standardAddressCheckRequest", fetch = FetchType.LAZY, cascade = [CascadeType.ALL], orphanRemoval = true) val residents: MutableSet&lt;Resident&gt; = mutableSetOf(), )</ID>
    <ID>SpreadOperator:HmppsAssessForEarlyReleaseApi.kt$(*args)</ID>
    <ID>TooManyFunctions:AddressService.kt$AddressService</ID>
  </CurrentIssues>
</SmellBaseline>
